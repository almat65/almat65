     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
django.db.utils.OperationalError: connection to server at "localhost" (::1), port 5432 failed: FATAL:  password authentication failed for user "docker"

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> docker ps
CONTAINER ID   IMAGE                                               COMMAND                  CREATED      STATUS             PORTS                    NAMES
075d63671958   jakartowns-compose_nginx                            "/entrypoint.sh ngin…"   8 days ago   Up About an hour   0.0.0.0:80->80/tcp       jakartowns-compose_nginx_1
f2ff79a6ee85   us.gcr.io/production-228020/djangojak:production    "python manage.py ru…"   8 days ago   Up About an hour                            jakartowns-compose_backend_1
602f349e4280   davidcaron/tileserver-gl-light:v3.0.0               "node /usr/src/app/ …"   8 days ago   Up About an hour   80/tcp                   jakartowns-compose_tile-server_1
f936fbdfb8fa   us.gcr.io/production-228020/jakartowns:production   "docker-entrypoint.s…"   8 days ago   Up About an hour                            jakartowns-compose_frontend_1
d9a2d576a1c7   postgis/postgis:12-3.0                              "docker-entrypoint.s…"   8 days ago   Up About an hour   0.0.0.0:5432->5432/tcp   jakartowns-compose_postgis_1

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> cat 
cmdlet Get-Content at command pipeline position 1
Supply values for the following parameters:
Path[0]:

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> cat ..\jakartowns-compose\.env
# docker-compose variables
# ------------------------
# if you change FQDN, you should probably change BACKEND_URL and VECTOR_TILE_SERVER_URL
FQDN=127.0.0.1
FQDN_PROTOCOL=http
JKTOWNS_ASSET_PATH=http://127.0.0.1/
NGINX_PORT=80
POSTGRES_USER=docker
POSTGRES_PASSWORD=docker
POSTGRES_DB=djangojak
MAPBOX_TOKEN=pk.eyJ1IjoiamFrYXJ0byIsImEiOiJjanF5MjB0aDIwcDdvNDNxdTlzdDYxNDB0In0.9R4fT0JgAZgN-vu8OsALLA
BACKEND_DEBUG=true
# Only set this if you can trust the "X-User" header going to the backend
# USE_TRUSTED_HTTP_X_USER=1
# Set to only allow an ip range in nginx
# ALLOW_IP=
# Set to protect http endpoint with basic auth (used mostly for staging)
# BASIC_AUTH_PASSWORD=
# Set to enable hot reloading in development
# WEBSOCKETS_ENABLED=true
SENTRY_ENVIRONMENT=development
SENTRY_DSN_BACKEND=
SENTRY_DSN_DATA_DOWNLOADER=
# Watchtower configuration
# ------------------------
# Before enabling, make sure auth information is configured in ./config/watchtower/config.json
# You can use helper in scripts/setup-watchtower.sh
WATCHTOWER_DISABLED=true
# Frontend build-time variables
# -----------------------------
BUCKET_URL=https://copc-3dtiles-adapter-lzkyt5hzma-nn.a.run.app
IMG_DIR=2dtiles
# BACKEND_URL=https://maps.jakartoto.com/backend
BACKEND_URL=http://127.0.0.1/backend
VECTOR_TILE_SERVER_URL=http://127.0.0.1/tiles
ACCOUNT_BACKEND_URL=https://jakartowns.jakarto.com
VECTOR_TILE_SOURCE_LAYER=spheres
COORDSYSLIST=coordSystemList.json
HTTP_HOSTNAME=localhost
EPSG_PROJTO=EPSG:4326

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> psql -h localhost -U docker djangojak
Password for user docker:
psql: error: FATAL:  password authentication failed for user "docker"

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> docker ps
CONTAINER ID   IMAGE                                               COMMAND                  CREATED      STATUS             PORTS                    NAMES
075d63671958   jakartowns-compose_nginx                            "/entrypoint.sh ngin…"   8 days ago   Up About an hour   0.0.0.0:80->80/tcp       jakartowns-compose_nginx_1
f2ff79a6ee85   us.gcr.io/production-228020/djangojak:production    "python manage.py ru…"   8 days ago   Up About an hour                            jakartowns-compose_backend_1
602f349e4280   davidcaron/tileserver-gl-light:v3.0.0               "node /usr/src/app/ …"   8 days ago   Up About an hour   80/tcp                   jakartowns-compose_tile-server_1
f936fbdfb8fa   us.gcr.io/production-228020/jakartowns:production   "docker-entrypoint.s…"   8 days ago   Up About an hour                            jakartowns-compose_frontend_1
d9a2d576a1c7   postgis/postgis:12-3.0                              "docker-entrypoint.s…"   8 days ago   Up About an hour   0.0.0.0:5432->5432/tcp   jakartowns-compose_postgis_1
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> psql -h localhost -U docker djangojak
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.
djangojak=# exit

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> cd ..\jakartowns-compose\
 - Container jakartowns-compose_watchtower_1          Removed                                                                                                                                                             0.0s 
 - Container jakartowns-compose_nginx_1               Removed                                                                                                                                                                0.8s 
 - Container jakartowns-compose_frontend_1            Removed                                                                                                                                                                2.3s 
 - Container jakartowns-compose_tile-server_1         Removed                                                                                                                                                               12.0s 
 - Container jakartowns-compose_backend_1             Removed                                                                                                                                                                2.4s 
 - Container jakartowns-compose_backend-migrations_1  Removed                                                                                                                                                                0.0s 
 - Container jakartowns-compose_postgis_1             Removed                                                                                                                                                                0.8s 
 - Network jakartowns-compose_default                 Removed                                                                                                                                                                0.7s 

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> code .
[+] Running 2/1
 - Network jakartowns-compose_default      Created                                                                                                                                                                           0.9s 
jakartowns-compose-postgis-1  | 
jakartowns-compose-postgis-1  | PostgreSQL Database directory appears to contain a database; Skipping initialization
jakartowns-compose-postgis-1  | 
jakartowns-compose-postgis-1  | 2022-05-27 14:24:19.770 UTC [1] LOG:  starting PostgreSQL 12.5 (Debian 12.5-1.pgdg100+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 8.3.0-6) 8.3.0, 64-bit
jakartowns-compose-postgis-1  | 2022-05-27 14:24:19.770 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
jakartowns-compose-postgis-1  | 2022-05-27 14:24:19.770 UTC [1] LOG:  listening on IPv6 address "::", port 5432
jakartowns-compose-postgis-1  | 2022-05-27 14:24:19.781 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
jakartowns-compose-postgis-1  | 2022-05-27 14:24:19.815 UTC [1] LOG:  database system is ready to accept connections
Gracefully stopping... (press Ctrl+C again to force)
[+] Running 1/1
 - Container jakartowns-compose-postgis-1  Stopped                                                                                                                                                                           0.5s 
canceled

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose up -d postgis
[+] Running 1/1
 - Container jakartowns-compose-postgis-1  Started                                                                                                                                                                           1.2s 
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> psql -h localhost -U docker -p 5444 djangojak
psql (12.9, server 12.5 (Debian 12.5-1.pgdg100+1))
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

djangojak=# exit

 
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> python manage.py migrate
Traceback (most recent call last):
  File "C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\django\db\backends\base\base.py", line 244, in ensure_connection
    self.connect()
  File "C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\django\utils\asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\django\db\backends\base\base.py", line 225, in connect
    self.connection = self.get_new_connection(conn_params)
  File "C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\django\utils\asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\django\db\backends\postgresql\base.py", line 203, in get_new_connection
    connection = Database.connect(**conn_params)
  File "C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\psycopg2\__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "localhost" (::1), port 5432 failed: FATAL:  password authentication failed for user "docker"


(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> cd ..\jakartowns-compose\
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> code .
NAME                           COMMAND                  SERVICE             STATUS              PORTS
jakartowns-compose-postgis-1   "docker-entrypoint.s…"   postgis             running             0.0.0.0:5444->5432/tcp

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> cd ../djangojak

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, authtoken, contenttypes, jakartowns_backend, sessions
Running migrations:
  No migrations to apply.

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> psql -h localhost -U docker -p 5444 djangojak
psql (12.9, server 12.5 (Debian 12.5-1.pgdg100+1))
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

djangojak=# \dt
                     List of relations
 Schema |              Name               | Type  | Owner
--------+---------------------------------+-------+--------
 public | auth_group                      | table | docker
 public | auth_group_permissions          | table | docker
 public | auth_permission                 | table | docker
 public | auth_user                       | table | docker
 public | auth_user_groups                | table | docker
 public | auth_user_user_permissions      | table | docker
 public | authtoken_token                 | table | docker
 public | django_admin_log                | table | docker
 public | django_content_type             | table | docker
 public | django_migrations               | table | docker
 public | django_session                  | table | docker
 public | jakartowns_backend_extent       | table | docker
 public | jakartowns_backend_extentaerial | table | docker
 public | jakartowns_backend_sphere       | table | docker
 public | spatial_ref_sys                 | table | docker
djangojak=# \d jakartowns_backend_extentaerial
             Table "public.jakartowns_backend_extentaerial"
   Column   |           Type           | Collation | Nullable | Default
 date       | date                     |           |          |
 data_srid  | integer                  |           | not null |
 geometry   | geometry(Point,4326)     |           | not null |
 created_at | timestamp with time zone |           | not null |
 updated_at | timestamp with time zone |           | not null |
Indexes:
    "jakartowns_backend_extentaerial_date_53014427" btree (date)
    "jakartowns_backend_extentaerial_geometry_f28dd3fe_id" gist (geometry)
    "jakartowns_backend_extentaerial_las_id_45f6bb2b_like" btree (las_id varchar_pattern_ops)
    "jakartowns_backend_extentaerial_to_delete_38211f11" btree (to_delete)


djangojak=# exit

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> cd ..\jakartowns-compose\

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker ps
CONTAINER ID   IMAGE                    COMMAND                  CREATED         STATUS         PORTS                    NAMES
48d8438aabec   postgis/postgis:12-3.0   "docker-entrypoint.s…"   7 minutes ago   Up 7 minutes   0.0.0.0:5444->5432/tcp   jakartowns-compose-postgis-1

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose up -d backend
[+] Running 3/3
 - Container jakartowns-compose-postgis-1             Running                                                                                                                                                                0.0s 
 - Container jakartowns-compose-backend-migrations-1  Started                                                                                                                                                                1.9s 
 - Container jakartowns-compose-backend-1             Started                                                                                                                                                                3.1s 
 
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose exec backend bash
root@37db71849b97:/code# ls
Dockerfile  djangojak  docker-compose.yml  jakartowns_backend  manage.py  pytest.ini  requirements-dev.txt  requirements.txt  scripts  setup.cfg

root@37db71849b97:/code# python manage.py migrate
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/django/db/backends/base/base.py", line 244, in ensure_connection
    self.connect()
  File "/usr/local/lib/python3.8/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/django/db/backends/base/base.py", line 225, in connect
    self.connection = self.get_new_connection(conn_params)
  File "/usr/local/lib/python3.8/site-packages/django/utils/asyncio.py", line 26, in inner
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/django/db/backends/postgresql/base.py", line 203, in get_new_connection
    connection = Database.connect(**conn_params)
  File "/usr/local/lib/python3.8/site-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: Connection refused
        Is the server running on host "postgis" (172.20.0.2) and accepting
        TCP/IP connections on port 5444?


root@37db71849b97:/code# python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, authtoken, contenttypes, jakartowns_backend, sessions
Running migrations:
  No migrations to apply.
  
root@37db71849b97:/code# exit

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose logs backend
jakartowns-compose-backend-1  | Watching for file changes with StatReloader
....................
site-packages/django/db/backends/postgresql/base.py", line 203, in get_new_connection
jakartowns-compose-backend-1  |     connection = Database.connect(**conn_params)
jakartowns-compose-backend-1  |   File "/usr/local/lib/python3.8/site-packages/psycopg2/__init__.py", line 122, in connect
jakartowns-compose-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
jakartowns-compose-backend-1  | django.db.utils.OperationalError: could not connect to server: Connection refused
jakartowns-compose-backend-1  |         Is the server running on host "postgis" (172.20.0.2) and accepting
jakartowns-compose-backend-1  |         TCP/IP connections on port 5444?
jakartowns-compose-backend-1  | 
jakartowns-compose-backend-1  | Watching for file changes with StatReloader
jakartowns-compose-backend-1  | Performing system checks...
jakartowns-compose-backend-1  | 
jakartowns-compose-backend-1  | System check identified no issues (0 silenced).
jakartowns-compose-backend-1  | Django version 4.0.4, using settings 'djangojak.settings'
jakartowns-compose-backend-1  | Starting development server at http://0.0.0.0:8000/
jakartowns-compose-backend-1  | Quit the server with CONTROL-C.
jakartowns-compose-backend-1  | /code/djangojak/settings.py changed, reloading.
jakartowns-compose-backend-1  | Watching for file changes with StatReloader
jakartowns-compose-backend-1  | Performing system checks...
jakartowns-compose-backend-1  | 
jakartowns-compose-backend-1  | System check identified no issues (0 silenced).
jakartowns-compose-backend-1  | May 27, 2022 - 14:33:37
jakartowns-compose-backend-1  | Django version 4.0.4, using settings 'djangojak.settings'
jakartowns-compose-backend-1  | Starting development server at http://0.0.0.0:8000/
jakartowns-compose-backend-1  | Quit the server with CONTROL-C.

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose up -d backend
[+] Running 3/3
 - Container jakartowns-compose-postgis-1             Running                                                                                                                                                                0.0s 
 - Container jakartowns-compose-backend-migrations-1  Started                                                                                                                                                                1.0s 
 - Container jakartowns-compose-backend-1             Running                                                                                                                                                                0.0s 
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose logs backend 
jakartowns-compose-backend-1  | Watching for file changes with StatReloader
jakartowns-compose-backend-1  | Performing system checks...
jakartowns-compose-backend-1  | 
................................
jakartowns-compose-backend-1  | django.db.utils.OperationalError: could not connect to server: Connection refused
jakartowns-compose-backend-1  |         Is the server running on host "postgis" (172.20.0.2) and accepting
jakartowns-compose-backend-1  |         TCP/IP connections on port 5444?
jakartowns-compose-backend-1  | 
jakartowns-compose-backend-1  | Watching for file changes with StatReloader
jakartowns-compose-backend-1  | Performing system checks...
jakartowns-compose-backend-1  | 
jakartowns-compose-backend-1  | System check identified no issues (0 silenced).
jakartowns-compose-backend-1  | May 27, 2022 - 14:33:15
jakartowns-compose-backend-1  | Django version 4.0.4, using settings 'djangojak.settings'
jakartowns-compose-backend-1  | Starting development server at http://0.0.0.0:8000/
jakartowns-compose-backend-1  | Quit the server with CONTROL-C.
jakartowns-compose-backend-1  | /code/djangojak/settings.py changed, reloading.
jakartowns-compose-backend-1  | Watching for file changes with StatReloader
jakartowns-compose-backend-1  | Performing system checks...
jakartowns-compose-backend-1  | 
jakartowns-compose-backend-1  | System check identified no issues (0 silenced).
jakartowns-compose-backend-1  | May 27, 2022 - 14:33:37
jakartowns-compose-backend-1  | Django version 4.0.4, using settings 'djangojak.settings'
jakartowns-compose-backend-1  | Starting development server at http://0.0.0.0:8000/
jakartowns-compose-backend-1  | Quit the server with CONTROL-C.

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose exec backend bash

root@37db71849b97:/code# ls
Dockerfile  djangojak  docker-compose.yml  jakartowns_backend  manage.py  pytest.ini  requirements-dev.txt  requirements.txt  scripts  setup.cfg
root@37db71849b97:/code# cat setup.cfg
[bumpversion]
current_version = 1.7.7
commit = True
tag = True
tag_name = {new_version}
[bumpversion:file:djangojak/__version__.py]
[flake8]
max-line-length = 88
ignore = E203,W503
root@37db71849b97:/code# cat setup.cfg
[bumpversion]
current_version = 1.7.7
commit = True
tag = True
tag_name = {new_version}
[bumpversion:file:djangojak/__version__.py]
[flake8]
max-line-length = 88
ignore = E203,W503
heyroot@37db71849b97:/code# cat setup.cfg
[bumpversion]
current_version = 1.7.7
commit = True
tag = True
tag_name = {new_version}
[flake8]
max-line-length = 88
ignore = E203,W503
hey

root@37db71849b97:/code# vim setup.cfg
bash: vim: command not found

root@37db71849b97:/code# python manage.py migrate jakartowns_backend 0012
Operations to perform:
  Target specific migration: 0012_add_has_raw_las, from jakartowns_backend
Running migrations:
  Rendering model states... DONE
  Unapplying jakartowns_backend.0013_extentaerial... OK
  
root@37db71849b97:/code# exit
exit

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> psql -h localhost -U docker -p 5444 djangojak
psql (12.9, server 12.5 (Debian 12.5-1.pgdg100+1))
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

djangojak=# \dt
                  List of relations
--------+----------------------------+-------+--------
 public | auth_group                 | table | docker
 public | auth_permission            | table | docker
 public | auth_user                  | table | docker
 public | auth_user_groups           | table | docker
 public | authtoken_token            | table | docker
 public | django_admin_log           | table | docker
 public | django_content_type        | table | docker
 public | django_migrations          | table | docker
 public | django_session             | table | docker
 public | jakartowns_backend_extent  | table | docker
 public | jakartowns_backend_sphere  | table | docker
 public | spatial_ref_sys            | table | docker
 tiger  | addr                       | table | docker
djangojak=# exit

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose exec backend bash
root@37db71849b97:/code# exit
exit

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose up -d backend-migrations
[+] Running 2/2
 - Container jakartowns-compose-postgis-1             Running                                                                                                                                                                0.0s 
 - Container jakartowns-compose-backend-migrations-1  Started                                                                                                                                                                0.9s 
 
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> psql -h localhost -U docker -p 5444 djangojak
psql (12.9, server 12.5 (Debian 12.5-1.pgdg100+1))
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.

djangojak=# \dt
                     List of relations
 Schema |              Name               | Type  | Owner
--------+---------------------------------+-------+--------
 public | auth_group                      | table | docker
 public | auth_permission                 | table | docker
 public | auth_user                       | table | docker
 public | auth_user_groups                | table | docker
 public | auth_user_user_permissions      | table | docker
 public | authtoken_token                 | table | docker
 public | django_admin_log                | table | docker
 public | django_content_type             | table | docker
 public | django_migrations               | table | docker
 public | django_session                  | table | docker
 public | jakartowns_backend_extent       | table | docker
 public | jakartowns_backend_extentaerial | table | docker
 public | jakartowns_backend_sphere       | table | docker
 public | spatial_ref_sys                 | table | docker

djangojak-# \q

(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose exec backend bash

root@37db71849b97:/code# ls
Dockerfile  djangojak  docker-compose.yml  extend3tuiles.geojson.json  jakartowns_backend  manage.py  pytest.ini  requirements-dev.txt  requirements.txt  scripts  setup.cfg

root@37db71849b97:/code# python
Python 3.8.13 (default, May 11 2022, 08:43:25) 
[GCC 8.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import load_data
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python3.8/site-packages/django/conf/__init__.py", line 67, in _setup
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.

>>> import djangojak
>>> djangojak.settings.configure
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: module 'djangojak' has no attribute 'settings'
>>> import djangojak.settings
>>> djangojak.settings.configure
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: module 'djangojak.settings' has no attribute 'configure'
>>> import jakartowns_backend
>>> import jakartowns_backend.settings
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ModuleNotFoundError: No module named 'jakartowns_backend.settings'

>>> exit()
root@37db71849b97:/code# python load_data.py
Traceback (most recent call last):
  File "load_data.py", line 6, in <module>
    from jakartowns_backend import models
  File "/code/jakartowns_backend/models.py", line 26, in <module>
    class ExtentAerial(models.Model):
  File "/usr/local/lib/python3.8/site-packages/django/db/models/base.py", line 127, in __new__
    app_config = apps.get_containing_app_config(module)
  File "/usr/local/lib/python3.8/site-packages/django/apps/registry.py", line 260, in get_containing_app_config
    self.check_apps_ready()
  File "/usr/local/lib/python3.8/site-packages/django/apps/registry.py", line 138, in check_apps_ready
    raise AppRegistryNotReady("Apps aren't loaded yet.")
django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.

root@37db71849b97:/code# python
Python 3.8.13 (default, May 11 2022, 08:43:25) 
[GCC 8.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> from jakartowns_backend import load_data
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/code/jakartowns_backend/load_data.py", line 2, in <module>
    from jakartowns_backend import models
  File "/code/jakartowns_backend/models.py", line 26, in <module>
    class ExtentAerial(models.Model):
  File "/usr/local/lib/python3.8/site-packages/django/db/models/base.py", line 127, in __new__
    app_config = apps.get_containing_app_config(module)
  File "/usr/local/lib/python3.8/site-packages/django/apps/registry.py", line 260, in get_containing_app_config
    self.check_apps_ready()
  File "/usr/local/lib/python3.8/site-packages/django/apps/registry.py", line 137, in check_apps_ready
    settings.INSTALLED_APPS
  File "/usr/local/lib/python3.8/site-packages/django/conf/__init__.py", line 87, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python3.8/site-packages/django/conf/__init__.py", line 67, in _setup
    raise ImproperlyConfigured(
django.core.exceptions.ImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.

>>>
root@37db71849b97:/code# python manage.py shell
Python 3.8.13 (default, May 11 2022, 08:43:25) 
[GCC 8.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from jakartowns_backend import load_data
>>> load_data.run2()
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/django/contrib/gis/gdal/datasource.py", line 71, in __init__
    ds = capi.open_ds(force_bytes(ds_input), self._write, byref(ds_driver))
  File "/usr/local/lib/python3.8/site-packages/django/contrib/gis/gdal/prototypes/errcheck.py", line 130, in check_pointer
    raise GDALException('Invalid pointer returned from "%s"' % func.__name__)
django.contrib.gis.gdal.error.GDALException: Invalid pointer returned from "OGROpen"

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/code/jakartowns_backend/load_data.py", line 18, in run2
    lm = LayerMapping(models.ExtentAerial, 'extend3tiles.geojson.json', mapping)
  File "/usr/local/lib/python3.8/site-packages/django/contrib/gis/utils/layermapping.py", line 117, in __init__
    self.ds = DataSource(data, encoding=encoding)
  File "/usr/local/lib/python3.8/site-packages/django/contrib/gis/gdal/datasource.py", line 75, in __init__
    raise GDALException('Could not open the datasource at "%s"' % ds_input)
django.contrib.gis.gdal.error.GDALException: Could not open the datasource at "extend3tiles.geojson.json"
>>>
now exiting InteractiveConsole...
root@37db71849b97:/code# python manage.py shell
Python 3.8.13 (default, May 11 2022, 08:43:25) 
[GCC 8.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from jakartowns_backend import load_data
>>> load_data.run2()
Failed to save {'las_id': '268-5031', 'date': datetime.date(2015, 12, 31), 'geometry': 'POLYGON ((-73.9702055745137 45.417967784621,-73.9702802766326 45.4269660388049,-73.9575013368782 45.4270179377489,-73.9574286644672 45.4180196673738,-73.9702055745137 45.417967784621))'}:
 Cannot set ExtentAerial SpatialProxy (POINT) with value of type: <class 'django.contrib.gis.geos.polygon.Polygon'>
Continuing
Failed to save {'las_id': '266-5031', 'date': datetime.date(2015, 12, 31), 'geometry': 'POLYGON ((-73.9957592877974 45.4178597316827,-73.9958380492703 45.4268579521465,-73.983059181083 45.4269127102673,-73.9829824492766 45.4179144727205,-73.9957592877974 45.4178597316827))'}:
 Cannot set ExtentAerial SpatialProxy (POINT) with value of type: <class 'django.contrib.gis.geos.polygon.Polygon'>
Continuing
Failed to save {'las_id': '267-5031', 'date': datetime.date(2015, 12, 31), 'geometry': 'POLYGON ((-73.9829824492766 45.4179144727205,-73.983059181083 45.4269127102673,-73.9702802766326 45.4269660388049,-73.9702055745137 45.417967784621,-73.9829824492766 45.4179144727205))'}:
 Cannot set ExtentAerial SpatialProxy (POINT) with value of type: <class 'django.contrib.gis.geos.polygon.Polygon'>
Continuing
>>>
now exiting InteractiveConsole...

root@37db71849b97:/code# python manage.py migrate jakartowns_backend 0012
Operations to perform:
  Target specific migration: 0012_add_has_raw_las, from jakartowns_backend
Running migrations:
  Rendering model states... DONE
  Unapplying jakartowns_backend.0013_extentaerial... OK

root@37db71849b97:/code# python manage.py makemigrations
Migrations for 'jakartowns_backend':
  jakartowns_backend/migrations/0013_extentaerial.py
    - Create model ExtentAerial
Traceback (most recent call last):
  File "manage.py", line 21, in <module>
    main()
  File "/usr/local/lib/python3.8/site-packages/django/core/management/__init__.py", line 446, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python3.8/site-packages/django/core/management/__init__.py", line 440, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/usr/local/lib/python3.8/site-packages/django/core/management/base.py", line 414, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/usr/local/lib/python3.8/site-packages/django/core/management/base.py", line 460, in execute
  File "/usr/local/lib/python3.8/site-packages/django/core/management/base.py", line 98, in wrapped
    res = handle_func(*args, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/django/core/management/commands/makemigrations.py", line 214, in handle
    self.write_migration_files(changes)
  File "/usr/local/lib/python3.8/site-packages/django/core/management/commands/makemigrations.py", line 256, in write_migration_files
    with open(writer.path, "w", encoding="utf-8") as fh:
OSError: [Errno 30] Read-only file system: '/code/jakartowns_backend/migrations/0013_extentaerial.py'
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> python manage.py makemigrations
C:\Users\sanya\anaconda3\envs\dev\lib\site-packages\django\core\management\commands\makemigrations.py:121: RuntimeWarning: Got an error checking a consistent migration history performed for database connection 'default': connection to server at "localhost" (::1), port 5432 failed: FATAL:  password authentication failed for user "docker"

Migrations for 'jakartowns_backend':
  jakartowns_backend\migrations\0013_extentaerial.py
    - Create model ExtentAerial
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> docker-compose exec backend bash
time="2022-05-27T11:07:09-04:00" level=warning msg="The \"POSTGRES_USER\" variable is not set. Defaulting to a blank string."
time="2022-05-27T11:07:09-04:00" level=warning msg="The \"POSTGRES_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2022-05-27T11:07:09-04:00" level=warning msg="The \"POSTGRES_DB\" variable is not set. Defaulting to a blank string."
time="2022-05-27T11:07:09-04:00" level=warning msg="The \"POSTGRES_USER\" variable is not set. Defaulting to a blank string."
time="2022-05-27T11:07:09-04:00" level=warning msg="The \"POSTGRES_PASSWORD\" variable is not set. Defaulting to a blank string."
time="2022-05-27T11:07:09-04:00" level=warning msg="The \"POSTGRES_DB\" variable is not set. Defaulting to a blank string."
service "backend" is not running container #1
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\djangojak> cd ..\jakartowns-compose\
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose up -d --force-recreate backend
[+] Running 3/3
 - Container jakartowns-compose-postgis-1             Running                                                                                                                                                                0.0s 
 - Container jakartowns-compose-backend-migrations-1  Started                                                                                                                                                                3.4s 
 - Container jakartowns-compose-backend-1             Started                                                                                                                                                                4.4s 
(dev) PS C:\ALEXANDRE\0 E2022\Stage III\dev\jakartowns-compose> docker-compose exec backend bash
root@96698a8c9faa:/code# python manage.py shell
Python 3.8.13 (default, May 11 2022, 08:43:25) 
[GCC 8.3.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from jakartowns_backend import load_data
>>> load_data.run2()
